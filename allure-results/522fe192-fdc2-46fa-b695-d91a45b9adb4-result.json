{"name": "test_add_group[None:name=u+P\"WY;header `5)( H_eYm<#O'T-;footerC ;s]", "status": "failed", "statusDetails": {"message": "AssertionError: assert [1:;;, 2:name...-So8O|B}, ...] == [1:;;, 2:name...-So8O|B}, ...]\n  Left contains one more item: None:name=u+P\"WY;header `5)( H_eYm<#O'T-;footerC ;s\n  Use -v to get the full diff", "trace": "app = <fixture.application.Application object at 0x00000205713D5C70>, db = <fixture.db.DbFixture object at 0x00000205713D5AC0>\njson_groups = None:name=u+P\"WY;header `5)( H_eYm<#O'T-;footerC ;s\n\n    def test_add_group(app, db, json_groups):\n        group = json_groups\n        with allure.step(f\"Given a group list\"):\n            old_groups = db.get_group_list()\n        with allure.step(f\"When I add a group %s to the list\" % group):\n            app.group.create(group)\n        with allure.step(f\"Then the new group list is equal to the old list with the added group\"):\n            new_groups = db.get_group_list()\n            old_groups.append(group)\n>           assert sorted(old_groups, key=Group.id_or_max) == sorted(new_groups, key=Group.id_or_max)\nE           assert [1:;;, 2:name...-So8O|B}, ...] == [1:;;, 2:name...-So8O|B}, ...]\nE             Left contains one more item: None:name=u+P\"WY;header `5)( H_eYm<#O'T-;footerC ;s\nE             Use -v to get the full diff\n\ntest\\test_add_group.py:14: AssertionError"}, "steps": [{"name": "Given a group list", "status": "passed", "start": 1618231282824, "stop": 1618231282824}, {"name": "When I add a group None:name=u+P\"WY;header `5)( H_eYm<#O'T-;footerC ;s to the list", "status": "passed", "start": 1618231282824, "stop": 1618231283828}, {"name": "Then the new group list is equal to the old list with the added group", "status": "failed", "statusDetails": {"message": "AssertionError: assert [1:;;, 2:name...-So8O|B}, ...] == [1:;;, 2:name...-So8O|B}, ...]\n  Left contains one more item: None:name=u+P\"WY;header `5)( H_eYm<#O'T-;footerC ;s\n  Use -v to get the full diff\n", "trace": "  File \"C:\\Work_olga\\Teach\\python_training\\test\\test_add_group.py\", line 14, in test_add_group\n    assert sorted(old_groups, key=Group.id_or_max) == sorted(new_groups, key=Group.id_or_max)\n"}, "start": 1618231283828, "stop": 1618231283828}], "parameters": [{"name": "json_groups", "value": "None:name=u+P\"WY;header `5)( H_eYm<#O'T-;footerC ;s"}], "start": 1618231282824, "stop": 1618231283829, "uuid": "b4fcd942-73fd-40c7-8927-bcd72e7d1be1", "historyId": "d31675755d4b8ab127594a4733a68493", "testCaseId": "8e9b1d07ef6cdb67de3c4a3d82e10652", "fullName": "test.test_add_group#test_add_group", "labels": [{"name": "parentSuite", "value": "test"}, {"name": "suite", "value": "test_add_group"}, {"name": "host", "value": "DESKTOP-H5JPLR0"}, {"name": "thread", "value": "1348-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test.test_add_group"}]}