{
  "uid" : "8676cb40974623e",
  "name" : "test_add_group[None:name=u+P\"WY;header `5)( H_eYm<#O'T-;footerC ;s]",
  "fullName" : "test.test_add_group#test_add_group",
  "historyId" : "d31675755d4b8ab127594a4733a68493",
  "time" : {
    "start" : 1618231282824,
    "stop" : 1618231283829,
    "duration" : 1005
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: assert [1:;;, 2:name...-So8O|B}, ...] == [1:;;, 2:name...-So8O|B}, ...]\n  Left contains one more item: None:name=u+P\"WY;header `5)( H_eYm<#O'T-;footerC ;s\n  Use -v to get the full diff",
  "statusTrace" : "app = <fixture.application.Application object at 0x00000205713D5C70>, db = <fixture.db.DbFixture object at 0x00000205713D5AC0>\njson_groups = None:name=u+P\"WY;header `5)( H_eYm<#O'T-;footerC ;s\n\n    def test_add_group(app, db, json_groups):\n        group = json_groups\n        with allure.step(f\"Given a group list\"):\n            old_groups = db.get_group_list()\n        with allure.step(f\"When I add a group %s to the list\" % group):\n            app.group.create(group)\n        with allure.step(f\"Then the new group list is equal to the old list with the added group\"):\n            new_groups = db.get_group_list()\n            old_groups.append(group)\n>           assert sorted(old_groups, key=Group.id_or_max) == sorted(new_groups, key=Group.id_or_max)\nE           assert [1:;;, 2:name...-So8O|B}, ...] == [1:;;, 2:name...-So8O|B}, ...]\nE             Left contains one more item: None:name=u+P\"WY;header `5)( H_eYm<#O'T-;footerC ;s\nE             Use -v to get the full diff\n\ntest\\test_add_group.py:14: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "app",
    "time" : {
      "start" : 1618231282803,
      "stop" : 1618231282823,
      "duration" : 20
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false,
    "stepsCount" : 0
  }, {
    "name" : "db",
    "time" : {
      "start" : 1618231269420,
      "stop" : 1618231269425,
      "duration" : 5
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false,
    "stepsCount" : 0
  }, {
    "name" : "stop",
    "time" : {
      "start" : 1618231269420,
      "stop" : 1618231269420,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false,
    "stepsCount" : 0
  } ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: assert [1:;;, 2:name...-So8O|B}, ...] == [1:;;, 2:name...-So8O|B}, ...]\n  Left contains one more item: None:name=u+P\"WY;header `5)( H_eYm<#O'T-;footerC ;s\n  Use -v to get the full diff",
    "statusTrace" : "app = <fixture.application.Application object at 0x00000205713D5C70>, db = <fixture.db.DbFixture object at 0x00000205713D5AC0>\njson_groups = None:name=u+P\"WY;header `5)( H_eYm<#O'T-;footerC ;s\n\n    def test_add_group(app, db, json_groups):\n        group = json_groups\n        with allure.step(f\"Given a group list\"):\n            old_groups = db.get_group_list()\n        with allure.step(f\"When I add a group %s to the list\" % group):\n            app.group.create(group)\n        with allure.step(f\"Then the new group list is equal to the old list with the added group\"):\n            new_groups = db.get_group_list()\n            old_groups.append(group)\n>           assert sorted(old_groups, key=Group.id_or_max) == sorted(new_groups, key=Group.id_or_max)\nE           assert [1:;;, 2:name...-So8O|B}, ...] == [1:;;, 2:name...-So8O|B}, ...]\nE             Left contains one more item: None:name=u+P\"WY;header `5)( H_eYm<#O'T-;footerC ;s\nE             Use -v to get the full diff\n\ntest\\test_add_group.py:14: AssertionError",
    "steps" : [ {
      "name" : "Given a group list",
      "time" : {
        "start" : 1618231282824,
        "stop" : 1618231282824,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false,
      "stepsCount" : 0
    }, {
      "name" : "When I add a group None:name=u+P\"WY;header `5)( H_eYm<#O'T-;footerC ;s to the list",
      "time" : {
        "start" : 1618231282824,
        "stop" : 1618231283828,
        "duration" : 1004
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false,
      "stepsCount" : 0
    }, {
      "name" : "Then the new group list is equal to the old list with the added group",
      "time" : {
        "start" : 1618231283828,
        "stop" : 1618231283828,
        "duration" : 0
      },
      "status" : "failed",
      "statusMessage" : "AssertionError: assert [1:;;, 2:name...-So8O|B}, ...] == [1:;;, 2:name...-So8O|B}, ...]\n  Left contains one more item: None:name=u+P\"WY;header `5)( H_eYm<#O'T-;footerC ;s\n  Use -v to get the full diff\n",
      "statusTrace" : "  File \"C:\\Work_olga\\Teach\\python_training\\test\\test_add_group.py\", line 14, in test_add_group\n    assert sorted(old_groups, key=Group.id_or_max) == sorted(new_groups, key=Group.id_or_max)\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true,
      "hasContent" : true,
      "stepsCount" : 0
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "hasContent" : true,
    "stepsCount" : 3
  },
  "afterStages" : [ {
    "name" : "db::fin",
    "time" : {
      "start" : 1618231286078,
      "stop" : 1618231286078,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false,
    "stepsCount" : 0
  }, {
    "name" : "stop::fin",
    "time" : {
      "start" : 1618231286079,
      "stop" : 1618231286113,
      "duration" : 34
    },
    "status" : "broken",
    "statusMessage" : "selenium.common.exceptions.NoSuchElementException: Message: Unable to locate element: [name=\"user\"]\n\n",
    "statusTrace" : "  File \"c:\\work_olga\\teach\\python_training\\venv\\lib\\site-packages\\allure_commons\\_allure.py\", line 200, in __call__\n    return self._fixture_function(*args, **kwargs)\n  File \"C:\\Work_olga\\Teach\\python_training\\conftest.py\", line 82, in fin\n    fixture.session.ensure_logout()\n  File \"C:\\Work_olga\\Teach\\python_training\\fixture\\session.py\", line 26, in ensure_logout\n    self.logout()\n  File \"C:\\Work_olga\\Teach\\python_training\\fixture\\session.py\", line 21, in logout\n    wd.find_element_by_name(\"user\")\n  File \"c:\\work_olga\\teach\\python_training\\venv\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 496, in find_element_by_name\n    return self.find_element(by=By.NAME, value=name)\n  File \"c:\\work_olga\\teach\\python_training\\venv\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 976, in find_element\n    return self.execute(Command.FIND_ELEMENT, {\n  File \"c:\\work_olga\\teach\\python_training\\venv\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 321, in execute\n    self.error_handler.check_response(response)\n  File \"c:\\work_olga\\teach\\python_training\\venv\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py\", line 242, in check_response\n    raise exception_class(message, screen, stacktrace)\n",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "hasContent" : true,
    "stepsCount" : 0
  } ],
  "labels" : [ {
    "name" : "parentSuite",
    "value" : "test"
  }, {
    "name" : "suite",
    "value" : "test_add_group"
  }, {
    "name" : "host",
    "value" : "DESKTOP-H5JPLR0"
  }, {
    "name" : "thread",
    "value" : "1348-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "test.test_add_group"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "json_groups",
    "value" : "None:name=u+P\"WY;header `5)( H_eYm<#O'T-;footerC ;s"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ {
      "uid" : "c6c85a4649f375ed",
      "status" : "broken",
      "statusDetails" : "AttributeError: module 'pytest' has no attribute 'allure'",
      "time" : {
        "start" : 1618230631548,
        "stop" : 1618230631548,
        "duration" : 0
      }
    }, {
      "uid" : "a31f95e50abd956",
      "status" : "failed",
      "statusDetails" : "AssertionError: assert [1:;;, 2:name...-So8O|B}, ...] == [1:;;, 2:name...-So8O|B}, ...]\n  Left contains one more item: None:name=u+P\"WY;header `5)( H_eYm<#O'T-;footerC ;s\n  Use -v to get the full diff",
      "time" : {
        "start" : 1618228898539,
        "stop" : 1618228899524,
        "duration" : 985
      }
    } ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ ]
  },
  "source" : "8676cb40974623e.json",
  "parameterValues" : [ "None:name=u+P\"WY;header `5)( H_eYm<#O'T-;footerC ;s" ]
}